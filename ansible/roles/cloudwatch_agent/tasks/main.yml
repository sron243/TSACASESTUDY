---
# CloudWatch Agent Role - Main Tasks
# This role installs and configures AWS CloudWatch Agent for disk monitoring

- name: Check if CloudWatch Agent is already installed
  stat:
    path: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent
  register: cw_agent_check

- name: Download CloudWatch Agent for Linux
  get_url:
    url: "https://s3.amazonaws.com/amazoncloudwatch-agent/{{ 'linux' if ansible_architecture == 'x86_64' else 'linux_arm64' }}/latest/amazon-cloudwatch-agent.rpm"
    dest: /tmp/amazon-cloudwatch-agent.rpm
    mode: '0644'
  when: ansible_os_family == "RedHat"

- name: Install CloudWatch Agent on RedHat
  yum:
    name: /tmp/amazon-cloudwatch-agent.rpm
    state: present
  when: ansible_os_family == "RedHat"
  become: yes

- name: Download CloudWatch Agent for Ubuntu
  get_url:
    url: "https://s3.amazonaws.com/amazoncloudwatch-agent/{{ 'linux' if ansible_architecture == 'x86_64' else 'linux_arm64' }}/latest/amazon-cloudwatch-agent.deb"
    dest: /tmp/amazon-cloudwatch-agent.deb
    mode: '0644'
  when: ansible_os_family == "Debian"

- name: Install CloudWatch Agent on Ubuntu
  apt:
    deb: /tmp/amazon-cloudwatch-agent.deb
    state: present
  when: ansible_os_family == "Debian"
  become: yes

- name: Create CloudWatch Agent configuration directory
  file:
    path: /opt/aws/amazon-cloudwatch-agent/etc
    state: directory
    mode: '0755'
    owner: root
    group: root
  become: yes

- name: Configure CloudWatch Agent
  template:
    src: amazon-cloudwatch-agent.json.j2
    dest: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
    mode: '0644'
    owner: root
    group: root
  become: yes
  notify: restart cloudwatch_agent

- name: Create CloudWatch Agent log directory
  file:
    path: /var/log/amazon/amazon-cloudwatch-agent
    state: directory
    mode: '0755'
    owner: root
    group: root
  become: yes

- name: Configure CloudWatch Agent service
  template:
    src: amazon-cloudwatch-agent.service.j2
    dest: /etc/systemd/system/amazon-cloudwatch-agent.service
    mode: '0644'
    owner: root
    group: root
  become: yes
  notify: restart cloudwatch_agent

- name: Enable and start CloudWatch Agent service
  systemd:
    name: amazon-cloudwatch-agent
    enabled: yes
    state: started
    daemon_reload: yes
  become: yes

- name: Configure CloudWatch Agent for disk monitoring
  template:
    src: disk-monitoring-config.json.j2
    dest: /opt/aws/amazon-cloudwatch-agent/etc/disk-monitoring-config.json
    mode: '0644'
    owner: root
    group: root
  become: yes
  notify: restart cloudwatch_agent

- name: Create CloudWatch Agent startup script
  template:
    src: start-cloudwatch-agent.sh.j2
    dest: /opt/aws/amazon-cloudwatch-agent/bin/start-cloudwatch-agent.sh
    mode: '0755'
    owner: root
    group: root
  become: yes

- name: Configure CloudWatch Agent to use custom configuration
  command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
  become: yes
  notify: restart cloudwatch_agent

- name: Verify CloudWatch Agent status
  command: systemctl status amazon-cloudwatch-agent
  register: cw_status
  changed_when: false
  become: yes

- name: Display CloudWatch Agent status
  debug:
    msg: "CloudWatch Agent is {{ 'running' if 'active (running)' in cw_status.stdout else 'not running' }}"

- name: Test CloudWatch Agent connectivity
  command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a status
  register: cw_test
  changed_when: false
  become: yes

- name: Display CloudWatch Agent test results
  debug:
    msg: "CloudWatch Agent connectivity test: {{ cw_test.stdout }}"

- name: Clean up temporary files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /tmp/amazon-cloudwatch-agent.rpm
    - /tmp/amazon-cloudwatch-agent.deb
  become: yes

- name: Configure CloudWatch Agent for cross-account monitoring
  template:
    src: cross-account-config.json.j2
    dest: /opt/aws/amazon-cloudwatch-agent/etc/cross-account-config.json
    mode: '0644'
    owner: root
    group: root
  become: yes
  notify: restart cloudwatch_agent
  when: cross_account_monitoring is defined and cross_account_monitoring 